{"version":3,"sources":["components/Title.js","components/Card.js","helpers/cardObjects.js","helpers/shuffle.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","style","styles","textStyle","this","props","text","Component","fontSize","color","Front","_ref","flipped","icon","Object","objectSpread","innerCard","opacity","iconStyle","className","Back","_ref2","Card","_this$props","isSelected","isMatched","onSelect","iconName","classes","cardContainer","transform","concat","onClick","Card_Front","Card_Back","margin","backgroundColor","borderRadius","transition","position","width","height","display","justifyContent","alignItems","cardObjects","shuffle","array","i","length","j","Math","floor","random","Board","state","boardElements","selected","matched","remaining","_shuffleCards","toConsumableArray","_this","setState","_resetGame","changeGameEmotion","_handleCardClick","index","_this$state","_this2","setTimeout","_this3","_this$state2","iconsComponents","map","object","Card_Card","key","includes","Fragment","boardContainer","resetButton","gridTemplateColumns","border","padding","textDecoration","cursor","textAlign","App","gameEmotion","_changeGameEmotion","mainAppContainer","Title_Title","Board_Board","React","minHeight","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PAEMA,mLAEF,OAAOC,EAAAC,EAAAC,cAAA,KAAGC,MAAOC,EAAOC,WAAYC,KAAKC,MAAMC,aAF/BC,aAMdL,EAAS,CACbC,UAAW,CACTK,SAAU,OACVC,MAAO,uBCTLC,EAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,KAAZ,OACZf,EAAAC,EAAAC,cAAA,OAAKC,MAAKa,OAAAC,EAAA,EAAAD,CAAA,GAAOZ,EAAOc,UAAd,CAAyBC,QAASL,EAAU,IAAM,OAC1Dd,EAAAC,EAAAC,cAAA,KAAGC,MAAOC,EAAOgB,UAAWC,UAAWN,MAIrCO,EAAO,SAAAC,GAAA,IAAGT,EAAHS,EAAGT,QAAH,OACXd,EAAAC,EAAAC,cAAA,OAAKC,MAAKa,OAAAC,EAAA,EAAAD,CAAA,GAAOZ,EAAOc,UAAd,CAAyBC,QAASL,EAAU,IAAM,OAC1Dd,EAAAC,EAAAC,cAAA,KAAGC,MAAOC,EAAOgB,UAAWC,UAAU,sBAIpCG,mLACK,IAAAC,EACqCnB,KAAKC,MAAzCmB,EADDD,EACCC,WAAYC,EADbF,EACaE,UAAWC,EADxBH,EACwBG,SACzBd,EAAUY,GAAcC,EACxBE,EAAWvB,KAAKC,MAAMuB,QAE5B,OACE9B,EAAAC,EAAAC,cAAA,OACEC,MAAKa,OAAAC,EAAA,EAAAD,CAAA,GACAZ,EAAO2B,cADP,CAEHC,UAAS,8BAAAC,OAAgCnB,EAAU,IAAM,EAAhD,UAEXoB,QAAS,WACFR,GAAeC,GAClBC,MAIJ5B,EAAAC,EAAAC,cAACiC,EAAD,CAAOpB,KAAMc,EAAUf,QAASA,IAChCd,EAAAC,EAAAC,cAACkC,EAAD,CAAMtB,QAASA,YAnBJL,aAyBbL,EAAS,CACbgB,UAAW,CACTV,SAAU,OACVC,MAAO,QAEToB,cAAe,CACbM,OAAQ,OACRC,gBAAiB,oBACjBC,aAAc,8BACdC,WAAY,yCAEdtB,UAAW,CACTuB,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZN,WAAY,wCClCDO,EAvBK,CAClB,CACElB,SAAU,WACVC,QAAS,mBAEX,CACED,SAAU,MACVC,QAAS,cAEX,CACED,SAAU,SACVC,QAAS,iBAEX,CACED,SAAU,QACVC,QAAS,gBAEX,CACED,SAAU,cACVC,QAAS,iBCJEkB,EAPC,SAAAC,GACd,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCrC,EAElB,CAACoC,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCrC,EAAA,GAE9BoC,EAAMG,GAFwBvC,EAAA,KCJvC2C,6MACJC,MAAQ,CACNC,cAAe,GACfC,SAAU,GACVC,QAAS,GACTC,UAAW,KAGbC,cAAgB,WAEd,IAAMJ,EAAa,GAAAzB,OAAAjB,OAAA+C,EAAA,EAAA/C,CAAO+B,GAAP/B,OAAA+C,EAAA,EAAA/C,CAAuB+B,IAE1CC,EAAQU,GAERM,EAAKC,SAAS,CACZP,qBAIJQ,WAAa,WACXF,EAAKC,SAAS,CACZN,SAAU,GACVC,QAAS,GACTC,UAAW,IAEbG,EAAKF,gBACLE,EAAKzD,MAAM4D,kBAAkB,mBAG/BC,iBAAmB,SAAAC,GAAS,IAAAC,EACmBN,EAAKP,MAA1CC,EADkBY,EAClBZ,cAAeC,EADGW,EACHX,SAAUC,EADPU,EACOV,QACjC,GAAwB,IAApBD,EAASR,OACXa,EAAKC,SAAS,CACZN,SAAU,CAACU,UAER,GAAwB,IAApBV,EAASR,OAAc,CAE9BO,EAAcC,EAAS,IAAI9B,WAAa6B,EAAcW,GAAOxC,SAE7DmC,EAAKC,SACH,CACEL,QAAO,GAAA3B,OAAAjB,OAAA+C,EAAA,EAAA/C,CAAM4C,GAAN,CAAeD,EAAS,GAAIU,IACnCV,SAAU,GACVE,UAAWG,EAAKP,MAAMI,UAAY,GAEpC,WAAW,IAAAU,EAAAjE,KACoB,IAAzBA,KAAKmD,MAAMI,WACbvD,KAAKC,MAAM4D,kBAAkB,gBAC7BK,WAAW,WACTD,EAAKL,cACJ,OAEH5D,KAAKC,MAAM4D,kBAAkB,gBAC7BK,WAAW,WACTD,EAAKhE,MAAM4D,kBAAkB,iBAC5B,SAKTH,EAAKC,SAAS,CAAEN,SAAU,CAACA,EAAS,GAAIU,KACxCL,EAAKzD,MAAM4D,kBAAkB,gBAC7BK,WAAW,WACTR,EAAKC,SAAS,CAAEN,SAAU,KAC1BK,EAAKzD,MAAM4D,kBAAkB,iBAC5B,2FAOP7D,KAAKwD,gBACLxD,KAAKC,MAAM4D,kBAAkB,iDAGtB,IAAAM,EAAAnE,KAAAoE,EACsCpE,KAAKmD,MAA1CC,EADDgB,EACChB,cAAeC,EADhBe,EACgBf,SAAUC,EAD1Bc,EAC0Bd,QAC3Be,EAAkBjB,EAAckB,IAAI,SAACC,EAAQR,GAAT,OACxCrE,EAAAC,EAAAC,cAAC4E,EAAD,CACEC,IAAKV,EACLxC,SAAUgD,EAAOhD,SACjBC,QAAS+C,EAAO/C,QAChBF,SAAU,kBAAM6C,EAAKL,iBAAiBC,IACtC3C,WAAYiC,EAASqB,SAASX,GAC9B1C,UAAWiC,EAAQoB,SAASX,OAIhC,OACErE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgF,SAAA,KACEjF,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAO8E,gBAAiBP,GACpC3E,EAAAC,EAAAC,cAAA,UAAQgC,QAAS5B,KAAK4D,WAAY/D,MAAOC,EAAO+E,aAAhD,sBA5FY1E,aAoGdL,EAAS,CACb8E,eAAgB,CACdvC,OAAQ,QACRD,MAAO,qBACPE,QAAS,OACTwC,oBAAqB,iBACrB9C,gBAAiB,qBACjBC,aAAc,+BAEhB4C,YAAa,CACXvC,QAAS,eACTyC,OAAQ,OACRC,QAAS,YACTjD,OAAQ,YACRkD,eAAgB,OAChB5E,MAAO,OACPD,SAAU,SACV8E,OAAQ,UACRC,UAAW,SACXnD,gBAAiB,uBCvHfoD,oNACJjC,MAAQ,CACNkC,YAAa,MAGfC,mBAAqB,SAAAD,GACnB3B,EAAKC,SAAS,CACZ0B,yFAKF,OACE3F,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAOyF,kBACjB7F,EAAAC,EAAAC,cAAC4F,EAAD,CAAOtF,KAAMF,KAAKmD,MAAMkC,cACxB3F,EAAAC,EAAAC,cAAC6F,EAAD,CAAO5B,kBAAmB7D,KAAKsF,6BAfrBI,IAAMvF,YAqBlBL,EAAS,CACbyF,iBAAkB,CAChBjD,QAAS,OACTqD,UAAW,QACXC,cAAe,SACfrD,eAAgB,SAChBC,WAAY,SACZR,gBAAiB,4BAINoD,ICzBKS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a042024a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Title extends Component {\n  render() {\n    return <p style={styles.textStyle}>{this.props.text}</p>;\n  }\n}\n\nconst styles = {\n  textStyle: {\n    fontSize: \"48px\",\n    color: \"#fff\"\n  }\n};\n\nexport { Title };\n","import React, { Component } from \"react\";\n\nconst Front = ({ flipped, icon }) => (\n  <div style={{ ...styles.innerCard, opacity: flipped ? \"1\" : \"0\" }}>\n    <i style={styles.iconStyle} className={icon} />\n  </div>\n);\n\nconst Back = ({ flipped }) => (\n  <div style={{ ...styles.innerCard, opacity: flipped ? \"0\" : \"1\" }}>\n    <i style={styles.iconStyle} className=\"fas fa-question\" />\n  </div>\n);\n\nclass Card extends Component {\n  render() {\n    const { isSelected, isMatched, onSelect } = this.props;\n    const flipped = isSelected || isMatched;\n    const iconName = this.props.classes;\n\n    return (\n      <div\n        style={{\n          ...styles.cardContainer,\n          transform: `perspective(600px) rotateY(${flipped ? 180 : 0}deg)`\n        }}\n        onClick={() => {\n          if (!isSelected && !isMatched) {\n            onSelect();\n          }\n        }}\n      >\n        <Front icon={iconName} flipped={flipped} />\n        <Back flipped={flipped} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  iconStyle: {\n    fontSize: \"36px\",\n    color: \"#fff\"\n  },\n  cardContainer: {\n    margin: \"10px\",\n    backgroundColor: \"var(--card-color)\",\n    borderRadius: \"var(--subtle-border-radius)\",\n    transition: \"transform var(--duration) var(--ease)\"\n  },\n  innerCard: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    transition: \"opacity var(--duration) var(--ease)\"\n  }\n};\n\nexport { Card };\n","const cardObjects = [\n  {\n    iconName: \"band-aid\",\n    classes: \"fas fa-band-aid\"\n  },\n  {\n    iconName: \"cat\",\n    classes: \"fas fa-cat\"\n  },\n  {\n    iconName: \"dragon\",\n    classes: \"fas fa-dragon\"\n  },\n  {\n    iconName: \"clock\",\n    classes: \"far fa-clock\"\n  },\n  {\n    iconName: \"solid-clock\",\n    classes: \"fas fa-clock\"\n  }\n];\n\nexport default cardObjects;\n","// Fisher-Yates shuffling algorithm\n// obtained from https://javascript.info/task/shuffle\n\n/*\n  This algorithm walks the array backwards, then swaps\n  the current element with a random one that has not yet\n  been swapped.\n*/\nconst shuffle = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n    [array[i], array[j]] = [array[j], array[i]]; // swap elements\n  }\n};\n\nexport default shuffle;\n","import React, { Component } from \"react\";\nimport { Card } from \"./Card\";\nimport cardObjects from \"../helpers/cardObjects\";\nimport shuffle from \"../helpers/shuffle\";\n\nclass Board extends Component {\n  state = {\n    boardElements: [],\n    selected: [],\n    matched: [],\n    remaining: 5\n  };\n\n  _shuffleCards = () => {\n    // spread the card objects array twice into a containing array\n    const boardElements = [...cardObjects, ...cardObjects];\n    // shuffle the array\n    shuffle(boardElements);\n    // put the shuffled array in state\n    this.setState({\n      boardElements\n    });\n  };\n\n  _resetGame = () => {\n    this.setState({\n      selected: [],\n      matched: [],\n      remaining: 5\n    });\n    this._shuffleCards();\n    this.props.changeGameEmotion(\"ðŸ™‚\");\n  };\n\n  _handleCardClick = index => {\n    const { boardElements, selected, matched } = this.state;\n    if (selected.length === 0) {\n      this.setState({\n        selected: [index]\n      });\n    } else if (selected.length === 1) {\n      const isAMatch =\n        boardElements[selected[0]].iconName === boardElements[index].iconName;\n      if (isAMatch) {\n        this.setState(\n          {\n            matched: [...matched, selected[0], index],\n            selected: [],\n            remaining: this.state.remaining - 1\n          },\n          function() {\n            if (this.state.remaining === 0) {\n              this.props.changeGameEmotion(\"ðŸŽ‰\");\n              setTimeout(() => {\n                this._resetGame();\n              }, 2000);\n            } else {\n              this.props.changeGameEmotion(\"ðŸ˜ƒ\");\n              setTimeout(() => {\n                this.props.changeGameEmotion(\"ðŸ™‚\");\n              }, 1000);\n            }\n          }\n        );\n      } else {\n        this.setState({ selected: [selected[0], index] });\n        this.props.changeGameEmotion(\"ðŸ˜•\");\n        setTimeout(() => {\n          this.setState({ selected: [] });\n          this.props.changeGameEmotion(\"ðŸ™‚\");\n        }, 1000);\n      }\n    }\n  };\n\n  componentDidMount() {\n    // shuffle the cards on mount\n    this._shuffleCards();\n    this.props.changeGameEmotion(\"ðŸ™‚\");\n  }\n\n  render() {\n    const { boardElements, selected, matched } = this.state;\n    const iconsComponents = boardElements.map((object, index) => (\n      <Card\n        key={index}\n        iconName={object.iconName}\n        classes={object.classes}\n        onSelect={() => this._handleCardClick(index)}\n        isSelected={selected.includes(index)}\n        isMatched={matched.includes(index)}\n      />\n    ));\n\n    return (\n      <>\n        <div style={styles.boardContainer}>{iconsComponents}</div>\n        <button onClick={this._resetGame} style={styles.resetButton}>\n          Reset Game\n        </button>\n      </>\n    );\n  }\n}\n\nconst styles = {\n  boardContainer: {\n    height: \"380px\",\n    width: \"var(--board-width)\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(5, 1fr)\",\n    backgroundColor: \"var(--board-color)\",\n    borderRadius: \"var(--subtle-border-radius)\"\n  },\n  resetButton: {\n    display: \"inline-block\",\n    border: \"none\",\n    padding: \"1rem 2rem\",\n    margin: \"1rem auto\",\n    textDecoration: \"none\",\n    color: \"#fff\",\n    fontSize: \"1.5rem\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    backgroundColor: \"var(--board-color)\"\n  }\n};\n\nexport { Board };\n","import React from \"react\";\nimport { Title } from \"./components/Title\";\nimport { Board } from \"./components/Board\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    gameEmotion: \"\"\n  };\n\n  _changeGameEmotion = gameEmotion => {\n    this.setState({\n      gameEmotion\n    });\n  };\n\n  render() {\n    return (\n      <div style={styles.mainAppContainer}>\n        <Title text={this.state.gameEmotion} />\n        <Board changeGameEmotion={this._changeGameEmotion} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainAppContainer: {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"var(--background-color)\"\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}